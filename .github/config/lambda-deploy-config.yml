# Lambda deployment configuration for lambda-test-nodejs
# Version managed in package.json (standard Node.js practice)

project:
  name: "lambda-test-nodejs"
  description: "Simple Node.js Lambda function for testing the deploy action"
  runtime: "node"
  versions:
    node: "18"


# Build commands - specify custom commands for each phase
build:
  commands:
    install: "npm ci"           # Install dependencies
    lint: "npm run lint"        # Run linting (blocks deployment on errors)
    test: "npm test"            # Run tests (blocks deployment on failures)
    build: "npm run build"      # Build the project
  
  # Artifact configuration
  artifact:
    path: "lambda-function.zip"    # Matches the zip script output
    exclude_patterns:
      - "*.md"
      - "*.test.js"
      - "test-local.js"
      - "__tests__/"
      - "coverage/"
      - ".nyc_output/"
      - "jest.config.js"
      - "eslint.config.js"
      - ".eslintrc.js"
      - "logs/"
      - ".idea/"
      - ".git/"

# Quality checks configuration - enable/disable quality checks
quality_checks:
  enabled: true
  lint: true               # Enable linting (uses build.commands.lint if specified)
  test: true               # Enable testing (uses build.commands.test if specified)
  security: true           # Run security scanning

environments:
  dev:
    trigger_branches: ["main", "feature/**"]
    aws:
      auth_type: "access_key"
    deployment:
      versioning: false
      run_tests: true
      notifications: false
  
  pre:
    trigger_branches: ["main"]
    aws:
      auth_type: "access_key"
    deployment:
      versioning: true
      run_tests: true
      notifications: false
  
  prod:
    aws:
      auth_type: "access_key"
    deployment:
      versioning: true
      run_tests: true
      notifications: true

# Deployment configuration
deployment:
  # Health check configuration
  health_check:
    enabled: true
    test_payload_object:
      name: "Test"
      source: "GitHub Actions"
      timestamp: "2025-08-22"
      environment: "dev"
    expected_status_code: 200
    expected_response_contains: "Hello, Test!"

  # Auto-rollback configuration (choose your preference)
  auto_rollback:
    # OPTION 1: Disabled (default) - Manual rollback only
    enabled: false
    
    # OPTION 2: Enabled - Automatic rollback on deployment failure
    # enabled: true
    # strategy: "last_successful"
    # triggers:
    #   on_deployment_failure: true
    #   on_health_check_failure: false
    # behavior:
    #   max_attempts: 1
    #   validate_rollback: true
    #   fail_on_rollback_failure: true

# NOTE: Version is now managed in package.json
# The action will automatically detect and use the version from:
# {
#   "version": "1.0.0"
# }
